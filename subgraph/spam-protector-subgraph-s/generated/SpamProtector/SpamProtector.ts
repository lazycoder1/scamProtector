// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FlaggedCall extends ethereum.Event {
  get params(): FlaggedCall__Params {
    return new FlaggedCall__Params(this);
  }
}

export class FlaggedCall__Params {
  _event: FlaggedCall;

  constructor(event: FlaggedCall) {
    this._event = event;
  }

  get callTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get obfuscatedNumber(): string {
    return this._event.parameters[1].value.toString();
  }

  get submittedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get label(): string {
    return this._event.parameters[3].value.toString();
  }

  get callType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get verified(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class Proof extends ethereum.Event {
  get params(): Proof__Params {
    return new Proof__Params(this);
  }
}

export class Proof__Params {
  _event: Proof;

  constructor(event: Proof) {
    this._event = event;
  }

  get root(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nullifierHash(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class SpamProtector extends ethereum.SmartContract {
  static bind(address: Address): SpamProtector {
    return new SpamProtector("SpamProtector", address);
  }

  isVerified(param0: Address): boolean {
    let result = super.call("isVerified", "isVerified(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isVerified(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isVerified", "isVerified(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _worldId(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _actionId(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeOwnerCall extends ethereum.Call {
  get inputs(): ChangeOwnerCall__Inputs {
    return new ChangeOwnerCall__Inputs(this);
  }

  get outputs(): ChangeOwnerCall__Outputs {
    return new ChangeOwnerCall__Outputs(this);
  }
}

export class ChangeOwnerCall__Inputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeOwnerCall__Outputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }
}

export class ChangeWorldCoinDetailsCall extends ethereum.Call {
  get inputs(): ChangeWorldCoinDetailsCall__Inputs {
    return new ChangeWorldCoinDetailsCall__Inputs(this);
  }

  get outputs(): ChangeWorldCoinDetailsCall__Outputs {
    return new ChangeWorldCoinDetailsCall__Outputs(this);
  }
}

export class ChangeWorldCoinDetailsCall__Inputs {
  _call: ChangeWorldCoinDetailsCall;

  constructor(call: ChangeWorldCoinDetailsCall) {
    this._call = call;
  }

  get _worldId(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _appId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _actionId(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ChangeWorldCoinDetailsCall__Outputs {
  _call: ChangeWorldCoinDetailsCall;

  constructor(call: ChangeWorldCoinDetailsCall) {
    this._call = call;
  }
}

export class StoreSpamCall extends ethereum.Call {
  get inputs(): StoreSpamCall__Inputs {
    return new StoreSpamCall__Inputs(this);
  }

  get outputs(): StoreSpamCall__Outputs {
    return new StoreSpamCall__Outputs(this);
  }
}

export class StoreSpamCall__Inputs {
  _call: StoreSpamCall;

  constructor(call: StoreSpamCall) {
    this._call = call;
  }

  get calls(): Array<StoreSpamCallCallsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      StoreSpamCallCallsStruct
    >();
  }
}

export class StoreSpamCall__Outputs {
  _call: StoreSpamCall;

  constructor(call: StoreSpamCall) {
    this._call = call;
  }
}

export class StoreSpamCallCallsStruct extends ethereum.Tuple {
  get callTime(): BigInt {
    return this[0].toBigInt();
  }

  get obfuscatedNumber(): string {
    return this[1].toString();
  }

  get label(): string {
    return this[2].toString();
  }

  get callType(): i32 {
    return this[3].toI32();
  }
}

export class StoreSpamOnlyOwnerCall extends ethereum.Call {
  get inputs(): StoreSpamOnlyOwnerCall__Inputs {
    return new StoreSpamOnlyOwnerCall__Inputs(this);
  }

  get outputs(): StoreSpamOnlyOwnerCall__Outputs {
    return new StoreSpamOnlyOwnerCall__Outputs(this);
  }
}

export class StoreSpamOnlyOwnerCall__Inputs {
  _call: StoreSpamOnlyOwnerCall;

  constructor(call: StoreSpamOnlyOwnerCall) {
    this._call = call;
  }

  get calls(): Array<StoreSpamOnlyOwnerCallCallsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      StoreSpamOnlyOwnerCallCallsStruct
    >();
  }

  get submitter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class StoreSpamOnlyOwnerCall__Outputs {
  _call: StoreSpamOnlyOwnerCall;

  constructor(call: StoreSpamOnlyOwnerCall) {
    this._call = call;
  }
}

export class StoreSpamOnlyOwnerCallCallsStruct extends ethereum.Tuple {
  get callTime(): BigInt {
    return this[0].toBigInt();
  }

  get obfuscatedNumber(): string {
    return this[1].toString();
  }

  get label(): string {
    return this[2].toString();
  }

  get callType(): i32 {
    return this[3].toI32();
  }
}

export class UnverifyCall extends ethereum.Call {
  get inputs(): UnverifyCall__Inputs {
    return new UnverifyCall__Inputs(this);
  }

  get outputs(): UnverifyCall__Outputs {
    return new UnverifyCall__Outputs(this);
  }
}

export class UnverifyCall__Inputs {
  _call: UnverifyCall;

  constructor(call: UnverifyCall) {
    this._call = call;
  }

  get add(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnverifyCall__Outputs {
  _call: UnverifyCall;

  constructor(call: UnverifyCall) {
    this._call = call;
  }
}

export class VerifyUserCall extends ethereum.Call {
  get inputs(): VerifyUserCall__Inputs {
    return new VerifyUserCall__Inputs(this);
  }

  get outputs(): VerifyUserCall__Outputs {
    return new VerifyUserCall__Outputs(this);
  }
}

export class VerifyUserCall__Inputs {
  _call: VerifyUserCall;

  constructor(call: VerifyUserCall) {
    this._call = call;
  }

  get root(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get userAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class VerifyUserCall__Outputs {
  _call: VerifyUserCall;

  constructor(call: VerifyUserCall) {
    this._call = call;
  }
}

export class VerifyUserByOwnerCall extends ethereum.Call {
  get inputs(): VerifyUserByOwnerCall__Inputs {
    return new VerifyUserByOwnerCall__Inputs(this);
  }

  get outputs(): VerifyUserByOwnerCall__Outputs {
    return new VerifyUserByOwnerCall__Outputs(this);
  }
}

export class VerifyUserByOwnerCall__Inputs {
  _call: VerifyUserByOwnerCall;

  constructor(call: VerifyUserByOwnerCall) {
    this._call = call;
  }

  get root(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _verifiedAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class VerifyUserByOwnerCall__Outputs {
  _call: VerifyUserByOwnerCall;

  constructor(call: VerifyUserByOwnerCall) {
    this._call = call;
  }
}
